<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($http) {
    /* widget controller */
    var c = this;

    c.selectedOption = '';

    c.filterBySelectedOption = function (item) {

        //debugger;

        // console.log(item);
        var STATE_COMMITTED = "Yes";

        var result = false

        switch (c.selectedOption) {
            case 'all':
                result = true;
                break;
            case 'uatCommitted':
                if(item.uatUpdateset && item.uatUpdateset.committed == STATE_COMMITTED){
                    result = true;
                }
                break;
            case 'uatUncommitted':
                if(item.uatUpdateset && item.uatUpdateset.committed != STATE_COMMITTED){
                    result = true;
                }
                break;
            case 'prodCommitted':
                if(item.prodUpdateset && item.prodUpdateset.committed == STATE_COMMITTED){
                    result = true;
                }
                break;
            case 'prodUncommitted':
                if(item.prodUpdateset && item.prodUpdateset.committed != STATE_COMMITTED){
                    result = true;
                    break;
                }
        }

        return result;
    }

    c.exportTableToExcel = function () {
        var filename = 'updatesets';
        var downloadLink;
        var dataType = 'application/vnd.ms-excel';
        var tableSelect = document.getElementById("update-sets");
        var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

        // Specify file name
        filename = filename ? filename + '.xls' : 'excel_data.xlsx';

        // Create download link element
        downloadLink = document.createElement("a");

        document.body.appendChild(downloadLink);

        if (navigator.msSaveOrOpenBlob) {
            var blob = new Blob(['\ufeff', tableHTML], {
                type: dataType
            });
            navigator.msSaveOrOpenBlob(blob, filename);
        } else {
            // Create a link to the file
            downloadLink.href = 'data:' + dataType + ', ' + tableHTML;

            // Setting the file name
            downloadLink.download = filename;

            //triggering the function
            downloadLink.click();
        }

    }


};]]></client_script>
        <controller_as>c</controller_as>
        <css>		.dev-header,
    .dev-subheader,
    th.dev-header,
    td.dev-subheader {
      background-color: #c3e6cb; /* Green */
    }

    .uat-header,
    .uat-subheader,
    th.uat-header,
    td.uat-subheader {
      background-color: #ffc107; /* Orange */
    }

    .prod-header,
    .prod-subheader,
    th.prod-header,
    td.prod-subheader {
      background-color: #31b0d5; /* blueish */
    }

    th.vertical-header {
      writing-mode: horizontal-tb;
      text-orientation: sideways;
      padding: 0.5rem;
    }

  .colour-beige{
        color: beige;
  }

  .colour-darkred {
    color: darkred;
  }

  .colour-pink {
    color: deeppink;
  }

  .right-aligned-btn{
    float: right;
    margin-top: -3px;
  }

  .left-aligned{
    text-align: left;
  }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>compare_updatesets</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) { 

 }]]></link>
        <name>Compare updatesets</name>
        <option_schema>[{"hint":"URL of the DEV environment","name":"dev_url","section":"Data","default_value":"https://dev50458.service-now.com/","label":"DEV Url","type":"string"},{"hint":"URL of the UAT or Test environment","name":"uat_url","section":"Data","default_value":"https://dev86854.service-now.com/","label":"UAT Url","type":"string"},{"hint":"URL of the PROD or Live environment","name":"prod_url","section":"Data","default_value":"https://dev86854.service-now.com/","label":"PROD Url","type":"string"},{"hint":"Encoded query to limit the number of updatesets to be searched. This is the encoded query to be applied to DEV update-sets. UAT and Prods are filtered based on DEV sys_ids","name":"encoded_query","section":"Data","default_value":"state=complete^sys_created_byINadmin,system","label":"Encoded query","type":"string"},{"hint":"Maximum number of records to return","name":"max_records_limit","section":"Data","default_value":"200","label":"Max records limit","type":"integer"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {

	var devUrl = options.dev_url;
	var uatUrl = options.uat_url;
	var prodUrl = options.prod_url;
	var encodedQuery = options.encoded_query;
	var maxRecords = options.max_records_limit;

	//$sp.log(options.maxRecords); // log to browser console

	function getUpdatesetsData() {
		var helper = new x_293046_updateset.UpdatesetHelper(devUrl, uatUrl, prodUrl, maxRecords, encodedQuery);
		var allUpdatesets = helper.getMergedUpdatesets();
		return allUpdatesets;
	}

	// Get the merged updatesets
	var mergedUpdatesets = getUpdatesetsData();

	// Format the response for the UI
	var formattedResults = [];

	mergedUpdatesets.forEach(updateSetResult => {

		var formattedResult = {
			devUpdateset: {},
			uatUpdateset: {
				exists: false,
				committed: false,
				localState: '',
				remoteState: '',
				source: ''
			},
			prodUpdateset: {
				exists: false,
				committed: false,
				localState: '',
				remoteState: '',
				source: ''
			}
		}

		// DEV updateset
		formattedResult.devUpdateset = updateSetResult.devUpdateset;

		// UAT updateset
		formattedResult.uatUpdateset = {
			exists: (updateSetResult.uatUpdatesetLocal || updateSetResult.uatUpdatesetRemote) ? 'Yes' : 'No',
			committed: ((updateSetResult.uatUpdatesetLocal && updateSetResult.uatUpdatesetLocal.state == 'Committed') ||
				(updateSetResult.uatUpdatesetRemote && updateSetResult.uatUpdatesetRemote.state == 'Committed')) ? 'Yes' : 'No',
			source: updateSetResult.uatUpdatesetRemote ? updateSetResult.uatUpdatesetRemote.update_source : '',
			hasRemoteAndLocal : (updateSetResult.uatUpdatesetRemote && updateSetResult.uatUpdatesetLocal) ? 'Yes' : 'No'
		}

		// Prod updateset
		formattedResult.prodUpdateset = {
			exists: (updateSetResult.prodUpdatesetLocal || updateSetResult.prodUpdatesetRemote) ? 'Yes' : 'No',
			committed: ((updateSetResult.prodUpdatesetLocal && updateSetResult.prodUpdatesetLocal.state == 'Committed') ||
				(updateSetResult.prodUpdatesetRemote && updateSetResult.prodUpdatesetRemote.state == 'Committed')) ? 'Yes' : 'No',
			source: updateSetResult.prodUpdatesetRemote ? updateSetResult.prodUpdatesetRemote.update_source : '',
			hasRemoteAndLocal : (updateSetResult.prodUpdatesetRemote && updateSetResult.prodUpdatesetLocal) ? 'Yes' : 'No'
		}

		formattedResults.push(formattedResult);
	});

	data.mergedUpdatesets = formattedResults;

	// $sp.log(data.mergedUpdatesets = formattedResults); // log to browser console

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-05-27 09:18:34</sys_created_on>
        <sys_id>5118e1714787e1101955b1a8536d43b4</sys_id>
        <sys_mod_count>134</sys_mod_count>
        <sys_name>Compare updatesets</sys_name>
        <sys_package display_value="Updateset Management" source="x_293046_updateset">b0a3e5714747e1101955b1a8536d43eb</sys_package>
        <sys_policy/>
        <sys_scope display_value="Updateset Management">b0a3e5714747e1101955b1a8536d43eb</sys_scope>
        <sys_update_name>sp_widget_5118e1714787e1101955b1a8536d43b4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-03 02:23:33</sys_updated_on>
        <template><![CDATA[<div
  ng-init="c.selectedOption= 'all'"
  class="panel panel-default"
  style="
    padding: 10px;
    background-color: #fff;
    box-shadow: 0 8px 12px -8px rgba(0, 0, 0, 0.3);
    margin-bottom: 10px;
  "
>
  <div class="checkbox-inline">
    <input
      class="form-check-input"
      type="radio"
      ng-model="c.selectedOption"
      name="inlineRadioOptions"
      id="all"
      value="all"
    />
    <label class="form-check-label" for="all">All</label>
  </div>
  <div class="checkbox-inline">
    <input
      class="form-check-input"
      type="radio"
      ng-model="c.selectedOption"
      name="inlineRadioOptions"
      id="uatCommitted"
      value="uatCommitted"
    />
    <label class="form-check-label" for="uat1">UAT Committed</label>
  </div>
  <div class="checkbox-inline">
    <input
      class="form-check-input"
      type="radio"
      ng-model="c.selectedOption"
      name="inlineRadioOptions"
      id="uatUncommitted"
      value="uatUncommitted"
    />
    <label class="form-check-label" for="inlineRadio2">UAT Un-committed</label>
  </div>
  <div class="checkbox-inline">
    <input
      class="form-check-input"
      type="radio"
      ng-model="c.selectedOption"
      name="inlineRadioOptions"
      id="prodCommitted"
      value="prodCommitted"
    />
    <label class="form-check-label" for="prod1">Prod Committed</label>
  </div>
  <div class="checkbox-inline">
    <input
      class="form-check-input"
      type="radio"
      ng-model="c.selectedOption"
      name="inlineRadioOptions"
      id="prodUncommitted"
      value="prodUncommitted"
    />
    <label class="form-check-label" for="prod1">Prod Un-committed</label>
  </div>

  <button
    class="btn btn-success right-aligned-btn"
    ng-click="c.exportTableToExcel('updates','update-sets')"
  >
    <i class="fa fa-table" aria-hidden="true"></i> Export to Excel
  </button>
</div>

<div >
  <table id="update-sets" class="table">
    <thead class="thead-dark">
      <tr>
        <th class="dev-header" colspan="2">
          <h2>${DEV}</h2>
        </th>
        <th class="uat-header" colspan="3">
          <h2>${UAT}</h2>
        </th>
        <th class="prod-header" colspan="3">
          <h2>${PROD}</h2>
        </th>
      </tr>
      <tr>
        <th class="vertical-header dev-subheader">${Name}</th>
        <th class="vertical-header dev-subheader">${Created by}</th>

        <th class="vertical-header uat-subheader">${Exists?}</th>
        <th class="vertical-header uat-subheader">${Committed?}</th>
        <th class="vertical-header uat-subheader left-aligned">${Multiple sources}</th>

        <th class="vertical-header prod-subheader">${Exists?}</th>
        <th class="vertical-header prod-subheader">${Committed?}</th>
        <th class="vertical-header prod-subheader left-aligned">${Multiple sources}</th>
 
      </tr>
    </thead>
    <tbody>
      <!-- Insert your data rows here -->
      <tr
        ng-repeat="mergedUpdateset in data.mergedUpdatesets | filter:c.filterBySelectedOption"
      >
        <!-- DEV -->
        <td class="dev-subheader">{{mergedUpdateset.devUpdateset.name}}</td>
        <td class="dev-subheader">
          {{mergedUpdateset.devUpdateset.sys_created_by}}
        </td>

        <!-- UAT -->
        <td class="uat-subheader left-aligned left-aligned">
          <!-- Exist -->
          <i
            ng-show="mergedUpdateset.uatUpdateset.exists == 'Yes'"
            class="colour-beige fa fa-check-circle"
          ></i>
          <i
            ng-show="mergedUpdateset.uatUpdateset.exists == 'No'"
            class="colour-darkred fa fa-times-circle"
          ></i>

          {{mergedUpdateset.uatUpdateset.exists}}
        </td>
        <td class="uat-subheader left-aligned">
          <!-- Committed -->
          <i
            ng-show="mergedUpdateset.uatUpdateset.committed == 'Yes'"
            class="colour-beige fa fa-check-circle"
          ></i>
          <i
            ng-show="mergedUpdateset.uatUpdateset.committed == 'No'"
            class="colour-darkred fa fa-times-circle"
          ></i>
          {{mergedUpdateset.uatUpdateset.committed }}
        </td>

        <td class="uat-subheader left-aligned">
          <!-- Multiple updatesets -->
          <i ng-show="mergedUpdateset.uatUpdateset.hasRemoteAndLocal == 'Yes'" class="colour-pink fa fa-exclamation-circle"></i>
          <i ng-show="mergedUpdateset.uatUpdateset.hasRemoteAndLocal == 'No'" class="colour-darkred fa fa-times-circle" ></i>

          {{ mergedUpdateset.uatUpdateset.hasRemoteAndLocal}}
        </td>

        <!-- PROD -->
        <td class="prod-subheader left-aligned">
          <!-- Exist -->
          <i
            ng-show="mergedUpdateset.prodUpdateset.exists == 'Yes'"
            class="colour-beige fa fa-check-circle"
          ></i>
          <i
            ng-show="mergedUpdateset.prodUpdateset.exists == 'No'"
            class="colour-darkred fa fa-times-circle"
          ></i>

          {{mergedUpdateset.prodUpdateset.exists}}
        </td>
        <td class="prod-subheader left-aligned">
          <!-- Committed -->
          <i
            ng-show="mergedUpdateset.prodUpdateset.committed == 'Yes'" class="colour-beige fa fa-check-circle"
          ></i>
          <i
            ng-show="mergedUpdateset.prodUpdateset.committed == 'No'" class="colour-darkred fa fa-times-circle"
          ></i> 

           {{mergedUpdateset.prodUpdateset.committed}}
        </td>

        <td class="prod-subheader left-aligned">
          <!-- Multiple updatesets -->
          <i ng-show="mergedUpdateset.prodUpdateset.hasRemoteAndLocal == 'Yes'" class="colour-pink fa fa-exclamation-circle"></i>
          <i ng-show="mergedUpdateset.prodUpdateset.hasRemoteAndLocal == 'No'" class="colour-darkred fa fa-times-circle" ></i>

          {{ mergedUpdateset.prodUpdateset.hasRemoteAndLocal}}
        </td>
      </tr>
    </tbody>
  </table>
</div>

<!-- <pre>
  {{data.mergedUpdatesets}}
</pre> -->
]]></template>
    </sp_widget>
</record_update>
