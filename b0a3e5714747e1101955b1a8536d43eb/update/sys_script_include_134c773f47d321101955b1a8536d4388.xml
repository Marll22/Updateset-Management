<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_293046_updateset.RestHelper</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RestHelper</name>
        <script><![CDATA[var RestHelper = Class.create();
RestHelper.prototype = {

    devRecordsLimit: 0,
    devEncodedQuery: '',
    logger: null,

    /**
      * 
      * @param {string} maxRecordsLimit : Max number of records to search
      * @param {string} encodedQuery : encoded query to be applied to limit the records
      */
    initialize: function (maxRecordsLimit, encodedQuery) {
        this.devRecordsLimit = maxRecordsLimit;
        this.logger = new x_293046_updateset.Logger(gs.getProperty('x_293046_updateset.debug_mode', false), "VF:");


        if (encodedQuery) {
            encodedQuery = encodeURIComponent(encodedQuery); // Apply URI encoding as REST needs i
        }

        this.devEncodedQuery = encodedQuery ? encodedQuery : "state=inprogress";

        this.logger.info("this.devUrl:" + this.devUrl);
        this.logger.info("this.devEncodedQuery:" + this.devEncodedQuery);
    },

    /**
     * REST call to get all the DEV update-sets based on the filters defined in Widget Options or system properties
     * @returns Return the local updatesets
     */
    getDevUpdatesets: function (devUrl, fields) {
        let result = [];

        try {
            if (!devUrl) return result;

            let r = new sn_ws.RESTMessageV2('x_293046_updateset.Updateset Management', 'Get Local Updateset');
            r.setStringParameterNoEscape('base_url', devUrl);
            r.setStringParameterNoEscape('record_limit', this.devRecordsLimit);
            r.setStringParameterNoEscape('sys_parm_encoded_query', this.devEncodedQuery);
            r.setStringParameterNoEscape('fields', fields);

            var response = r.execute();

            if (!response.haveError()) {
                result = response.getBody();
                this.logger.info("DEV:result: " + result);
            } else {
                this.logger.throwKnownError(
                    response.getErrorMessage()
                );
            }


        } catch (ex) {
            var message = ex.message;
            gs.error(gs.getMessage("VF: Error in getting local Updatesets: " + message));
            throw (message);
        }

        return result;
    },

    /**
     * 
     * @param {string} url : URL of the instance
     * @param {string} encodedQuery : list of the DEV sys_ids concatenated
     * @returns A list of all the update-sets based on DEV sys_ids
     */
    getRemoteUpdatesets: function (url, encodedQuery) {
        let result = [];

        if (!url) return result;

        try {
            var r = new sn_ws.RESTMessageV2('x_293046_updateset.Updateset Management', 'GET Remote Updatesets');
            r.setStringParameterNoEscape('base_url', url);
            r.setStringParameterNoEscape('fields', 'name,state,sys_id,remote_sys_id,update_source,parent');
            r.setStringParameterNoEscape('encoded_query', encodedQuery);
            r.setStringParameterNoEscape('record_limit', this.devRecordsLimit);

            var response = r.execute();

            if (!response.haveError()) {
                result = response.getBody();
                this.logger.info("Remote:result: " + result);
            } else {
                this.logger.throwKnownError(response.getErrorMessage());
            }

        } catch (ex) {
            var message = ex.message || ex;
            gs.error("VF: Error in getting local Updatesets: " + message);
            throw new Error(ex);
        }

        return result;
    },


    type: 'RestHelper'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-15 11:29:42</sys_created_on>
        <sys_id>134c773f47d321101955b1a8536d4388</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>RestHelper</sys_name>
        <sys_package display_value="Updateset Management" source="x_293046_updateset">b0a3e5714747e1101955b1a8536d43eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Updateset Management">b0a3e5714747e1101955b1a8536d43eb</sys_scope>
        <sys_update_name>sys_script_include_134c773f47d321101955b1a8536d4388</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-17 05:13:35</sys_updated_on>
    </sys_script_include>
</record_update>
